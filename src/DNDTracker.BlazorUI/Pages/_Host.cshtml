@page "/"
@namespace DNDTracker.BlazorUI.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>DNDTracker</title>
    <base href="~/" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400;600;700&family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />
    
    <div id="app-loading" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; background: #0b0e13; color: #ffffff; z-index: 9999;">
        <div style="text-align: center;">
            <div style="border: 3px solid #3a3a3a; border-top: 3px solid #4cc4a3; border-radius: 50%; width: 40px; height: 40px; animation: spin 1s linear infinite; margin: 0 auto 1rem;"></div>
            <p>Loading DNDTracker...</p>
        </div>
    </div>
    <style>
        @@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
    </style>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">ðŸ—™</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script>
        // Hide loading indicator once DOM is ready and Blazor has rendered
        document.addEventListener('DOMContentLoaded', function() {
            // Wait a bit for Blazor to render
            setTimeout(function() {
                const loadingElement = document.getElementById('app-loading');
                if (loadingElement) {
                    loadingElement.style.display = 'none';
                }
            }, 500);
        });
    </script>
</body>
</html>